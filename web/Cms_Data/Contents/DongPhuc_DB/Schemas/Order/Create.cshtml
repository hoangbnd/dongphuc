
@using Kooboo.CMS.Content.Models;
@using Kooboo.CMS.Content.Query;
@{ var schema = (Kooboo.CMS.Content.Models.Schema)ViewData["Schema"];
    var allowedEdit = (bool)ViewData["AllowedEdit"];
    var allowedView = (bool)ViewData["AllowedView"];
    var parentUUID = ViewContext.RequestContext.AllRouteValues()["parentUUID"];
    var parentFolder=ViewContext.RequestContext.AllRouteValues()["parentFolder"];
}
@using(Html.BeginForm(ViewContext.RequestContext.AllRouteValues()["action"].ToString()
    , ViewContext.RequestContext.AllRouteValues()["controller"].ToString()
    , ViewContext.RequestContext.AllRouteValues()
    , FormMethod.Post
    , new RouteValueDictionary(new { enctype = "application/x-www-form-urlencoded" })))
{
    <table><tr>
            <th>
            <label for="Name">T&#234;n kh&#225;ch h&#224;ng</label>
            </th>
            <td>
            <input class='long' id="Name" name="Name" type="text" value="@(Model.Name ?? "")" />            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Name"], null)
            
            </td>          
            </tr><tr>
            <th>
            <label for="Phone">Số điện thoại</label>
            </th>
            <td>
            <input class='long' id="Phone" name="Phone" type="text" value="@(Model.Phone ?? "")" />            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Phone"], null)
            
            </td>          
            </tr><tr>
            <th>
            <label for="Email">Email</label>
            </th>
            <td>
            <input class='long' id="Email" name="Email" type="text" value="@(Model.Email ?? "")" />            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Email"], null)
            
            </td>          
            </tr><tr>
            <th>
            <label for="Address">Địa chỉ</label>
            </th>
            <td>
            <input class='long' id="Address" name="Address" type="text" value="@(Model.Address ?? "")" />            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Address"], null)
            
            </td>          
            </tr><tr>
            <th>
            <label for="Note">Ghi ch&#250;</label>
            </th>
            <td>
            <textarea class="extra-large" name="Note" >@(Model.Note ?? "")</textarea>             
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Note"], null)
            
            </td>          
            </tr><tr>
            <th>
            <label for="ProductUUID">M&#227; sản phẩm</label>
            </th>
            <td>
            <input class='long' id="ProductUUID" name="ProductUUID" type="text" value="@(Model.ProductUUID ?? "")" />            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["ProductUUID"], null)
            
            </td>          
            </tr><tr>
            <th>
            <label for="ProductName">T&#234;n sản phẩm</label>
            </th>
            <td>
            <input class='long' id="ProductName" name="ProductName" type="text" value="@(Model.ProductName ?? "")" />            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["ProductName"], null)
            
            </td>          
            </tr><tr>
            <th>
            <label for="Quantity">Số lượng</label>
            </th>
            <td>
            <input class='long' id="Quantity" name="Quantity" type="text" value="@(Model.Quantity ?? "")"  data-val-number="The field Quantity must be a number." data-val="true"/>            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Quantity"], null)
            
            </td>          
            </tr><tr>
            <th>
            <label for="Status">Trạng th&#225;i đơn h&#224;ng</label>
            </th>
            <td>
            @{ var dropDownDefault_Status =  @"0";}
                <select name="Status" class="long">
                        <option value="@(@"0")" @((Model.Status != null && Model.Status.ToString().ToLower() == @"0".ToLower()) || (Model.Status == null && dropDownDefault_Status.ToLower() == @"0".ToLower()) ? "selected" : "")>Chờ duyệt</option>
                        <option value="@(@"1")" @((Model.Status != null && Model.Status.ToString().ToLower() == @"1".ToLower()) || (Model.Status == null && dropDownDefault_Status.ToLower() == @"1".ToLower()) ? "selected" : "")>Đã xong</option></select>            
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Status"], null)
            
            </td>          
            </tr>
            @if (allowedEdit) {
                <tr>
            <th>
           
            </th>
            <td>
            <input id='Published' name="Published" type="checkbox" @(Convert.ToBoolean(Model.Published)?"checked":"") value="true"/>
                                    <input type="hidden" value="false" name="Published"/>
            <label class="inline" for="Published">Published</label>
            @Html.ValidationMessageForColumn(((ISchema)ViewData["Schema"])["Published"], null)
            </td>          
            </tr>
            }
    @Html.Action("Categories", ViewContext.RequestContext.AllRouteValues())
    
    </table>
}